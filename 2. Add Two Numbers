# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        result_list = ListNode(0)
        result_tail = result_list
        passing = 0
        result = 0
        node = 0
        while l1 or l2 or passing:
            if l1:
                val1 = l1.val
            else:
                val1 = 0
            if l2:
                val2 = l2.val
            else:
                val2 = 0
            result = val1+val2+passing
            node = ListNode(result%10)
            passing = result//10
            result_tail.next = node
            result_tail = result_tail.next
            
            l1 = (l1.next if l1 else None)
            l2 = (l2.next if l2 else None)    
        return result_list.next
            
                
                
        
            
        
